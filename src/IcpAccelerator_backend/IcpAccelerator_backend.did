type ConnectionRequest = record {
  startup_id : principal;
  message : text;
  mentor_id : principal;
};
type DocsInfo = record {
  tokenomics : opt text;
  pitch_deck : opt text;
  white_paper : opt text;
  technical_docs : opt text;
};
type FounderInfo = record {
  seventy_info : opt SeventyInfoFounder;
  thirty_info : opt ThirtyInfoFounder;
};
type HubOrganizerRegistration = record {
  website_url : opt text;
  profile_picture : opt vec nat8;
  hub_location : opt text;
  hub_name : opt text;
  email : opt text;
  contact_number : opt text;
  privacy_policy_consent : opt bool;
  communication_consent : opt bool;
  full_name : opt text;
  id_professional_document_upload : opt vec nat8;
  hub_description : opt text;
};
type IcpHub = record { id : int32; region : text; name : text };
type LeaderboardEntryForLikes = record {
  like_count : opt nat;
  project_id : opt text;
};
type LeaderboardEntryForRatings = record {
  average_rating : opt float64;
  project_id : opt text;
};
type LeaderboardEntryForUpvote = record {
  upvote_count : opt nat;
  project_id : opt text;
};
type LikeRecord = record { count : nat; upvoters : vec LikesInfo };
type LikesInfo = record {
  name : opt text;
  time : nat64;
  image : opt vec nat8;
  principal_id : opt text;
};
type MainLevel = variant {
  Level1;
  Level2;
  Level3;
  Level4;
  Level5;
  Level6;
  Level7;
  Level8;
  Level9;
};
type MainLevelRatings = record { ratings : vec float64; level : MainLevel };
type MentorInternal = record {
  uid : text;
  active : bool;
  profile : MentorProfile;
};
type MentorProfile = record {
  email_address : opt text;
  mentor_image : opt vec nat8;
  motivation_for_becoming_a_mentor : opt text;
  years_of_experience_mentoring_startups : opt int32;
  professional_affiliations : opt text;
  time_zone : opt text;
  telegram_id : opt text;
  unique_contribution_to_startups : opt text;
  referrer_contact : opt text;
  preferred_icp_hub : opt text;
  specific_skills_or_technologies_expertise : opt text;
  specific_goals_objectives_as_a_mentor : opt text;
  areas_of_expertise : opt text;
  preferred_startup_stage : opt text;
  languages_spoken : opt text;
  industry_achievements : opt text;
  conflict_of_interest_disclosure : opt text;
  past_work_records_links : opt text;
  availability_and_time_commitment : opt text;
  success_stories_testimonials : opt text;
  linkedin_profile_link : opt text;
  location : opt text;
  full_name : opt text;
  preferred_communication_tools : opt text;
  volunteer_experience : opt text;
};
type Notification = record {
  read : bool;
  notification_type : NotificationType;
};
type NotificationForOwner = record {
  sender_image : vec nat8;
  message : text;
  timestamp : nat64;
  sender_name : text;
  project_id : text;
};
type NotificationProject = record {
  notification_verifier : NotificationSender;
  notifiation_id : text;
  notification_sender : NotificationSender;
  message : text;
  timestamp : nat64;
  project_id : text;
};
type NotificationSender = record { name : text; image : vec nat8 };
type NotificationType = variant {
  ConnectionAcknowledgement : record {
    social_handles : opt text;
    accepted : bool;
    mentor_id : principal;
  };
  ConnectionRequest : ConnectionRequest;
};
type ProjectInfo = record {
  seventy_info : opt SeventyInfoProject;
  thirty_info : opt ThirtyInfoProject;
};
type ProjectInfoInternal = record {
  uid : text;
  is_verified : bool;
  is_active : bool;
  params : ProjectInfo;
};
type Rating = record {
  sub_level : SubLevel;
  level_name : MainLevel;
  rating : float64;
  project_id : text;
};
type Request = record { mentor : opt MentorInternal; "text" : text };
type Role = record { id : int32; name : text };
type RolesResponse = record { roles : vec Role };
type SeventyInfoFounder = record {
  founder_image : opt vec nat8;
  equity_owner_of_company : opt text;
  future_goals : opt text;
  co_founder_linkedin_profile : opt text;
  break_even_analysis : opt text;
  how_long_know_each_other : opt text;
  is_team_full_time_working_on_project : opt text;
  average_monthly_revenue : opt text;
  regulatory_approvals : opt text;
  potential_risks : opt text;
  company_debt : opt text;
  market_size : opt text;
  registration_details : opt text;
  currently_users : opt text;
  share_about_venture : opt text;
  key_achieved_milestones : opt text;
  why_are_you_apply_for_acceleration_program : opt text;
  customer_demographics : opt text;
  committed_to_work_on_the_program_during_acceleration : opt bool;
  how_many_co_founder : opt text;
  target_market : opt text;
  user_feedback : opt text;
  competitors : opt text;
  long_term_goals : opt text;
  projected_revenues : opt text;
  stage_of_company : opt text;
  testimonials : opt text;
  company_vision : opt text;
  mitigation_strategies : opt text;
  role_within_company : opt text;
  previous_part_in_incubator : opt bool;
  average_monthly_spending : opt text;
  funding_requirements : opt text;
  raised_any_capital : opt bool;
  location : opt text;
  refer : opt text;
  employee_count : opt text;
};
type SeventyInfoProject = record {
  docs : opt DocsInfo;
  video_link : opt text;
  tags : opt text;
  team : opt vec TeamMember;
  technology_stack : opt text;
  project_creation_date : opt text;
  development_stage : opt text;
};
type SocialLinksInfo = record {
  linkedin : opt text;
  twitter : opt text;
  facebook : opt text;
};
type SubLevel = variant {
  All;
  SubLevel0;
  SubLevel1;
  SubLevel2;
  SubLevel3;
  SubLevel4;
  SubLevel5;
  SubLevel6;
  SubLevel7;
  SubLevel8;
  SubLevel9;
};
type Suggestion = record {
  id : nat64;
  status : text;
  content : text;
  parent_id : opt nat64;
  project_id : text;
};
type TeamMember = record {
  member_image : opt vec nat8;
  member_name : opt text;
  member_role : opt text;
  social_links : opt SocialLinksInfo;
  member_username : opt text;
};
type ThirtyInfoFounder = record {
  linked_in_profile : opt text;
  telegram_id : opt text;
  twitter_id : opt text;
  preferred_icp_hub : opt text;
  email : opt text;
  date_of_birth : opt text;
  phone_number : opt text;
  full_name : opt text;
};
type ThirtyInfoProject = record {
  project_description : opt text;
  project_url : opt text;
  preferred_icp_hub : opt text;
  project_area_of_focus : opt text;
  project_cover : opt vec nat8;
  project_logo : opt vec nat8;
  project_name : opt text;
  social_links : opt SocialLinksInfo;
};
type UniqueHubs = record { hubs : HubOrganizerRegistration; uuid : text };
type UpvoteRecord = record { count : nat; upvoters : vec UpvoterInfo };
type UpvoterInfo = record {
  name : opt text;
  timestamp : nat64;
  image : opt vec nat8;
  principal_id : opt text;
};
type UserRole = variant { VC; Mentor; Founder; Project; ICPHubOrganizer };
type VentureCapitalist = record {
  email_address : opt text;
  referrer : opt text;
  typical_decision_making_timeline_for_investments : opt text;
  interest_in_board_positions : opt bool;
  name_of_fund : opt text;
  size_of_managed_fund : opt int32;
  accredited_investor_status : opt bool;
  telegram_id : opt text;
  preferred_investment_sectors : opt text;
  average_investment_ticket : opt int32;
  preferred_icp_hub : opt text;
  investor_type : opt text;
  website_link : opt text;
  investment_stage_preference : opt text;
  number_of_portfolio_companies : opt int32;
  revenue_range_preference : opt text;
  assets_for_investment : opt int32;
  portfolio_link : opt text;
  location : opt text;
  technological_focus : opt text;
};
service : {
  add_suggestion : (text, text) -> (nat64, text);
  add_suggestion_caller : (text, text) -> (nat64, text);
  assign_roles_to_principal : (vec UserRole) -> (text);
  calculate_average_api : (text) -> (opt float64) query;
  connect_to_team_member : (text, text) -> (text);
  create_project : (ThirtyInfoProject) -> (text);
  delete_founder : () -> (text);
  delete_founder_caller : () -> (text);
  delete_mentor : () -> (text);
  delete_mentor_candid : () -> (text);
  delete_project : (text) -> (text);
  delete_venture_capitalist : () -> (text);
  delete_venture_capitalist_caller : () -> (text);
  get_all_mentors : () -> (vec MentorProfile) query;
  get_all_mentors_candid : () -> (vec MentorProfile) query;
  get_all_roles : () -> (RolesResponse) query;
  get_area_focus_expertise : () -> (vec Role) query;
  get_founder_info : () -> (opt FounderInfo) query;
  get_founder_info_caller : () -> (opt FounderInfo) query;
  get_hub_organizer : () -> (opt UniqueHubs) query;
  get_hub_organizer_candid : () -> (opt UniqueHubs) query;
  get_hubs_principal_using_region : (text) -> (vec text) query;
  get_icp_hubs_candid : () -> (vec IcpHub) query;
  get_latest_listed_project : () -> (vec ProjectInfoInternal) query;
  get_latest_live_proposal : () -> (vec ProjectInfoInternal) query;
  get_leaderboard_using_likes : () -> (vec LeaderboardEntryForLikes) query;
  get_leaderboard_using_ratings : () -> (vec LeaderboardEntryForRatings) query;
  get_leaderboard_using_upvotes : () -> (vec LeaderboardEntryForUpvote) query;
  get_main_level_ratings : (text) -> (
      vec record { MainLevel; MainLevelRatings },
    ) query;
  get_mentor : () -> (opt MentorProfile) query;
  get_mentor_by_expertise : (text) -> (vec MentorProfile) query;
  get_mentor_candid : () -> (opt MentorProfile) query;
  get_my_id : () -> (principal) query;
  get_notifications_for_hubs : () -> (vec NotificationProject) query;
  get_popular_listed_project : () -> (vec ProjectInfoInternal) query;
  get_popular_live_proposal : () -> (vec ProjectInfoInternal) query;
  get_project_requests : (text) -> (vec Request) query;
  get_project_upvotes : (text) -> (opt UpvoteRecord) query;
  get_project_using_id : (text) -> (opt ProjectInfoInternal) query;
  get_projects_for_caller : () -> (vec ProjectInfo) query;
  get_role : () -> (RolesResponse) query;
  get_role_from_p_id : () -> (opt vec UserRole) query;
  get_role_from_principal : () -> (opt vec UserRole) query;
  get_roles : () -> (RolesResponse) query;
  get_suggestions_by_parent_id : (text, nat64) -> (vec Suggestion) query;
  get_suggestions_by_parent_id_caller : (text, nat64) -> (vec Suggestion) query;
  get_suggestions_by_status : (text, text) -> (vec Suggestion) query;
  get_suggestions_by_status_caller : (text, text) -> (vec Suggestion) query;
  get_total_suggestions : (text) -> (nat64) query;
  get_total_suggestions_count : (text) -> (nat64) query;
  get_upvote_record : (text) -> (opt UpvoteRecord) query;
  get_user_likes : (text) -> (opt LikeRecord) query;
  get_vc_info : () -> (opt VentureCapitalist) query;
  get_venture_capitalist_info : () -> (opt VentureCapitalist) query;
  get_your_project_notifications : () -> (vec NotificationForOwner) query;
  greet : (text) -> (text) query;
  like_project : (text) -> (text);
  list_all_founders : () -> (vec FounderInfo) query;
  list_all_founders_caller : () -> (vec FounderInfo) query;
  list_all_projects : () -> (vec ProjectInfo) query;
  list_all_vcs : () -> (vec VentureCapitalist) query;
  list_all_venture_capitalist : () -> (vec VentureCapitalist) query;
  make_active_inactive : (principal) -> (text);
  make_active_inactive_mentor : (principal) -> (text);
  register_founder : (ThirtyInfoFounder) -> (text);
  register_founder_caller : (ThirtyInfoFounder) -> (text);
  register_hub_organizer : (HubOrganizerRegistration) -> (text);
  register_hub_organizer_candid : (HubOrganizerRegistration) -> (text);
  register_mentor : (MentorProfile) -> (text);
  register_mentor_candid : (MentorProfile) -> (text);
  register_venture_capitalist : (VentureCapitalist) -> (text);
  register_venture_capitalist_caller : (VentureCapitalist) -> (text);
  reply_to_suggestion : (nat64, text, text) -> (nat64, text);
  reply_to_suggestion_caller : (nat64, text, text) -> (nat64, text);
  respond_to_connection_request : (principal, principal, bool) -> ();
  respond_to_connection_request_candid : (principal, principal, bool) -> ();
  send_connection_request : (principal, text) -> ();
  send_request_as_mentor : (text, text) -> (text);
  update_founder : (FounderInfo) -> (text);
  update_founder_caller : (FounderInfo) -> (text);
  update_hub_organizer : (HubOrganizerRegistration) -> (text);
  update_hub_organizer_candid : (HubOrganizerRegistration) -> (text);
  update_mentor : (MentorProfile) -> (text);
  update_mentor_profile : (MentorProfile) -> (text);
  update_project : (text, ProjectInfo) -> (text);
  update_project_docs : (text, DocsInfo) -> (text);
  update_rating_api : (vec Rating) -> ();
  update_suggestion_status : (nat64, text, text) -> ();
  update_suggestion_status_caller : (nat64, text, text) -> ();
  update_team_member : (text, TeamMember) -> (text);
  update_venture_capitalist : (VentureCapitalist) -> ();
  update_venture_capitalist_caller : (VentureCapitalist) -> (text);
  upvote_project : (text) -> (text);
  verify_project_under_your_hub : (text) -> (text);
  view_notifications : (principal) -> (vec Notification) query;
  view_notifications_candid : (principal) -> (vec Notification) query;
}
