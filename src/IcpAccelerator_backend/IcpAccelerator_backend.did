type Announcements = record {
  announcement_message : text;
  timestamp : nat64;
  project_name : text;
};
type ApprovalRequest = record {
  country : text;
  name : text;
  sender : principal;
  requested_for : text;
  photo : vec nat8;
  tag_used : text;
  receiver : principal;
};
type Blog = record { blog_url : text; timestamp : nat64 };
type ConnectionRequest = record {
  startup_id : principal;
  message : text;
  mentor_id : principal;
};
type FilterCriteria = record {
  area_of_focus : opt text;
  country : opt text;
  money_raised_range : opt record { float64; float64 };
  vc_name : opt text;
  mentor_name : opt text;
  rating_range : opt record { float64; float64 };
};
type FounderInfo = record {
  seventy_info : opt SeventyInfoFounder;
  thirty_info : opt ThirtyInfoFounder;
};
type HubOrganizerRegistration = record {
  website_url : opt text;
  profile_picture : opt vec nat8;
  hub_location : opt text;
  hub_name : opt text;
  email : opt text;
  contact_number : opt text;
  privacy_policy_consent : opt bool;
  communication_consent : opt bool;
  full_name : opt text;
  id_professional_document_upload : opt vec nat8;
  hub_description : opt text;
};
type IcpHub = record { id : int32; region : text; name : text };
type LeaderboardEntryForLikes = record {
  like_count : opt nat;
  project_id : opt text;
};
type LeaderboardEntryForRatings = record {
  average_rating : opt float64;
  project_id : opt text;
};
type LeaderboardEntryForUpvote = record {
  upvote_count : opt nat;
  project_id : opt text;
};
type LikeRecord = record { count : nat; upvoters : vec LikesInfo };
type LikesInfo = record {
  name : opt text;
  time : nat64;
  image : opt vec nat8;
  principal_id : opt text;
};
type MAnnouncements = record {
  announcement_message : text;
  timestamp : nat64;
  project_name : text;
};
type MainLevel = variant {
  Level1;
  Level2;
  Level3;
  Level4;
  Level5;
  Level6;
  Level7;
  Level8;
  Level9;
};
type MainLevelRatings = record { ratings : vec float64; level : MainLevel };
type MentorInternal = record {
  uid : text;
  active : bool;
  approve : bool;
  decline : bool;
  profile : MentorProfile;
};
type MentorProfile = record {
  user_data : UserInformation;
  social_link : text;
  reason_for_joining : text;
  existing_icp_mentor : bool;
  preferred_icp_hub : opt text;
  website : text;
  multichain : opt text;
  area_of_expertise : text;
  category_of_mentoring_service : text;
  years_of_mentoring : text;
  existing_icp_project_porfolio : opt text;
  icop_hub_or_spoke : bool;
};
type Notification = record { notification_type : NotificationType };
type NotificationForOwner = record {
  sender_image : vec nat8;
  message : text;
  timestamp : nat64;
  sender_name : text;
  project_id : text;
};
type NotificationProject = record {
  notification_verifier : NotificationSender;
  notifiation_id : text;
  notification_sender : NotificationSender;
  message : text;
  timestamp : nat64;
  project_id : text;
};
type NotificationSender = record { name : text; image : vec nat8 };
type NotificationType = variant { ApprovalRequest : ApprovalRequest };
type NotificationType_1 = variant {
  ConnectionAcknowledgement : record {
    social_handles : opt text;
    accepted : bool;
    mentor_id : principal;
  };
  ConnectionRequest : ConnectionRequest;
};
type Notification_1 = record {
  read : bool;
  notification_type : NotificationType_1;
};
type ProjectInfo = record {
  project_elevator_pitch : vec nat8;
  reason_to_join_incubator : text;
  user_data : UserInformation;
  project_description : text;
  vc_assigned : opt vec VentureCapitalist;
  token_economics : text;
  self_rating_of_project : float64;
  preferred_icp_hub : opt text;
  mentors_assigned : opt vec MentorProfile;
  target_market : text;
  long_term_goals : text;
  project_area_of_focus : text;
  live_on_icp_mainnet : opt text;
  technical_docs : text;
  github_link : text;
  project_cover : vec nat8;
  promotional_video : text;
  money_raised_till_now : opt text;
  supports_multichain : opt text;
  project_logo : vec nat8;
  project_name : text;
  project_team : opt TeamMember;
};
type ProjectInfoForUser = record {
  vc_associated : opt vec VentureCapitalist;
  area_of_focus : opt text;
  date_ofjoining : text;
  reviews : opt Suggestion;
  team_member_info : opt vec TeamMember;
  website_social_group : opt text;
  mentor_associated : opt vec MentorProfile;
  country_of_project : opt text;
  announcements : opt vec Announcements;
  live_link_of_project : opt text;
  jobs_opportunity : opt text;
  rank_of_project : opt nat64;
};
type ProjectInfoInternal = record {
  uid : text;
  is_verified : bool;
  is_active : bool;
  params : ProjectInfo;
  creation_date : nat64;
};
type ProjectUpdateRequest = record {
  updated_info : ProjectInfo;
  project_id : text;
};
type Rating = record {
  sub_level : SubLevel;
  level_name : MainLevel;
  rating : float64;
  project_id : text;
};
type RatingAverages = record {
  peer_average : opt float64;
  own_average : opt float64;
  overall_average : opt float64;
  vc_average : opt float64;
  mentor_average : opt float64;
};
type Request = record { mentor : opt MentorInternal; "text" : text };
type Result = variant { Ok : UserInformation; Err : text };
type Role = record { id : int32; name : text };
type Role_1 = record {
  status : text;
  rejected_on : opt nat64;
  name : text;
  approved_on : opt nat64;
  requested_on : opt nat64;
};
type RolesResponse = record { roles : vec Role };
type SeventyInfoFounder = record {
  founder_image : opt vec nat8;
  equity_owner_of_company : opt text;
  future_goals : opt text;
  co_founder_linkedin_profile : opt text;
  break_even_analysis : opt text;
  how_long_know_each_other : opt text;
  is_team_full_time_working_on_project : opt text;
  average_monthly_revenue : opt text;
  regulatory_approvals : opt text;
  potential_risks : opt text;
  company_debt : opt text;
  market_size : opt text;
  registration_details : opt text;
  currently_users : opt text;
  share_about_venture : opt text;
  key_achieved_milestones : opt text;
  why_are_you_apply_for_acceleration_program : opt text;
  customer_demographics : opt text;
  committed_to_work_on_the_program_during_acceleration : opt bool;
  how_many_co_founder : opt text;
  target_market : opt text;
  user_feedback : opt text;
  competitors : opt text;
  long_term_goals : opt text;
  projected_revenues : opt text;
  stage_of_company : opt text;
  testimonials : opt text;
  company_vision : opt text;
  mitigation_strategies : opt text;
  role_within_company : opt text;
  previous_part_in_incubator : opt bool;
  average_monthly_spending : opt text;
  funding_requirements : opt text;
  raised_any_capital : opt bool;
  location : opt text;
  refer : opt text;
  employee_count : opt text;
};
type SubLevel = variant {
  All;
  SubLevel0;
  SubLevel1;
  SubLevel2;
  SubLevel3;
  SubLevel4;
  SubLevel5;
  SubLevel6;
  SubLevel7;
  SubLevel8;
  SubLevel9;
};
type Suggestion = record {
  id : nat64;
  status : text;
  content : text;
  parent_id : opt nat64;
  project_id : text;
};
type TeamMember = record {
  member_data : vec UserInformation;
  member_uid : text;
};
type ThirtyInfoFounder = record {
  linked_in_profile : opt text;
  telegram_id : opt text;
  twitter_id : opt text;
  preferred_icp_hub : opt text;
  email : opt text;
  date_of_birth : opt text;
  phone_number : opt text;
  full_name : opt text;
};
type UniqueHubs = record { hubs : HubOrganizerRegistration; uuid : text };
type UpvoteRecord = record { count : nat; upvoters : vec UpvoterInfo };
type UpvoterInfo = record {
  name : opt text;
  timestamp : nat64;
  image : opt vec nat8;
  principal_id : opt text;
};
type UserInformation = record {
  bio : opt text;
  country : text;
  area_of_intrest : text;
  profile_picture : opt vec nat8;
  telegram_id : opt text;
  twitter_id : opt text;
  openchat_username : opt text;
  email : opt text;
  full_name : text;
};
type UserRole = variant { VC; Mentor; Founder; Project; ICPHubOrganizer };
type VentureCapitalist = record {
  fund_size : float64;
  user_data : UserInformation;
  existing_icp_portfolio : text;
  registered_under_any_hub : opt bool;
  name_of_fund : text;
  reason_for_joining : text;
  logo : opt vec nat8;
  average_check_size : float64;
  money_invested : float64;
  existing_icp_investor : bool;
  preferred_icp_hub : text;
  project_on_multichain : opt text;
  investor_type : text;
  announcement_details : text;
  number_of_portfolio_companies : nat16;
  assets_under_management : text;
  portfolio_link : text;
  category_of_investment : text;
  type_of_investment : text;
};
type VentureCapitalistInternal = record {
  uid : text;
  approve : bool;
  is_active : bool;
  decline : bool;
  params : VentureCapitalist;
};
service : () -> {
  add_BlogPost : (text) -> (text);
  add_announcement : (Announcements) -> (text);
  add_mentor_announcement : (text, text) -> (text);
  add_suggestion_caller : (text, text) -> (nat64, text);
  add_vc_announcement : (text, text) -> (text);
  approve_mentor_creation_request_candid : (principal, bool) -> (text);
  approve_mentor_profile_update : (principal, bool) -> (text);
  approve_project_creation_request : (principal) -> (text);
  approve_project_details_updation_request : (principal, text, bool) -> (text);
  approve_vc_creation_request : (principal, bool) -> (text);
  approve_vc_profile_update : (principal, bool) -> (text);
  calculate_average_api : (text) -> (RatingAverages) query;
  connect_to_team_member : (text, text) -> (text);
  decline_mentor_creation_request_candid : (principal, bool) -> (text);
  decline_mentor_profile_update_request : (principal, bool) -> (text);
  decline_project_creation_request : (principal) -> (text);
  decline_vc_creation_request : (principal, bool) -> (text);
  decline_vc_profile_update_request : (principal, bool) -> (text);
  delete_founder_caller : () -> (text);
  delete_mentor_candid : () -> (text);
  delete_project : (text) -> (text);
  delete_venture_capitalist : () -> (text);
  delete_venture_capitalist_caller : () -> (text);
  filter_out_projects : (FilterCriteria) -> (vec ProjectInfo) query;
  get_admin_notifications : (principal) -> (vec Notification) query;
  get_all_mentors_candid : () -> (vec MentorProfile) query;
  get_all_roles : () -> (RolesResponse) query;
  get_all_users_information : () -> (vec UserInformation) query;
  get_announcements : () -> (vec record { principal; vec Announcements }) query;
  get_area_focus_expertise : () -> (vec Role) query;
  get_blog_post : () -> (vec record { principal; vec Blog }) query;
  get_dummy_data_for_project_details_for_users : () -> (
      ProjectInfoForUser,
    ) query;
  get_founder_info_caller : () -> (opt FounderInfo) query;
  get_hub_organizer_candid : () -> (opt UniqueHubs) query;
  get_hubs_principal_using_region : (text) -> (vec text) query;
  get_icp_hubs_candid : () -> (vec IcpHub) query;
  get_latest_listed_project : () -> (vec ProjectInfoInternal) query;
  get_latest_live_proposal : () -> (vec ProjectInfoInternal) query;
  get_leaderboard_using_likes : () -> (vec LeaderboardEntryForLikes) query;
  get_leaderboard_using_ratings : () -> (vec LeaderboardEntryForRatings) query;
  get_leaderboard_using_upvotes : () -> (vec LeaderboardEntryForUpvote) query;
  get_main_level_ratings : (text) -> (
      vec record { MainLevel; MainLevelRatings },
    ) query;
  get_mentor_announcements : () -> (
      vec record { principal; vec MAnnouncements },
    ) query;
  get_mentor_by_expertise : (text) -> (vec MentorProfile) query;
  get_mentor_candid : () -> (opt MentorProfile) query;
  get_multichain_list : () -> (vec text) query;
  get_my_id : () -> (principal) query;
  get_notifications_for_hubs : () -> (vec NotificationProject) query;
  get_popular_listed_project : () -> (vec ProjectInfoInternal) query;
  get_popular_live_proposal : () -> (vec ProjectInfoInternal) query;
  get_project_requests : (text) -> (vec Request) query;
  get_project_upvotes : (text) -> (opt UpvoteRecord) query;
  get_project_using_id : (text) -> (opt ProjectInfoInternal) query;
  get_projects_for_caller : () -> (vec ProjectInfo) query;
  get_role : () -> (RolesResponse) query;
  get_role_from_p_id : () -> (opt vec UserRole) query;
  get_role_status : () -> (vec Role_1) query;
  get_suggestions_by_parent_id_caller : (text, nat64) -> (vec Suggestion) query;
  get_suggestions_by_status_caller : (text, text) -> (vec Suggestion) query;
  get_total_suggestions : (text) -> (nat64) query;
  get_user_info_struct : () -> (opt UserInformation) query;
  get_user_information : () -> (Result) query;
  get_user_information_using_uid : (text) -> (Result) query;
  get_user_likes : (text) -> (opt LikeRecord) query;
  get_vc_announcements : () -> (
      vec record { principal; vec MAnnouncements },
    ) query;
  get_vc_info : () -> (opt VentureCapitalist) query;
  get_venture_capitalist_info : () -> (opt VentureCapitalist) query;
  get_your_project_notifications : () -> (vec NotificationForOwner) query;
  greet : (text) -> (text) query;
  like_project : (text) -> (text);
  list_all_founders : () -> (vec FounderInfo) query;
  list_all_projects : () -> (vec ProjectInfo) query;
  list_all_vcs : () -> (vec VentureCapitalist) query;
  list_all_venture_capitalist : () -> (vec VentureCapitalist) query;
  make_active_inactive_mentor : (principal) -> (text);
  make_project_active_inactive : (principal, text) -> (text);
  make_user_inactive : () -> (text);
  make_vc_active_inactive : (principal) -> (text);
  mentor_declined : () -> (vec MentorInternal) query;
  mentors_awaiting_approval : () -> (
      vec record { principal; MentorInternal },
    ) query;
  project_awaiting_approval : () -> (vec ProjectInfoInternal) query;
  project_declined : () -> (vec ProjectInfoInternal) query;
  project_update_awaiting_approval : () -> (vec ProjectUpdateRequest) query;
  register_founder_caller : (ThirtyInfoFounder) -> (text);
  register_hub_organizer_candid : (HubOrganizerRegistration) -> (text);
  register_mentor_candid : (MentorProfile) -> (text);
  register_project : (ProjectInfo) -> (text);
  register_user : (UserInformation) -> (text);
  register_venture_capitalist : (VentureCapitalist) -> (text);
  register_venture_capitalist_caller : (VentureCapitalist) -> (text);
  reply_to_suggestion_caller : (nat64, text, text) -> (nat64, text);
  respond_to_connection_request_candid : (principal, bool) -> (text);
  send_connection_request : (principal, text) -> (text);
  send_request_as_mentor : (text, text) -> (text);
  switch_role : (text, text) -> ();
  update_founder_caller : (FounderInfo) -> (text);
  update_hub_organizer_candid : (HubOrganizerRegistration) -> (text);
  update_mentor : (MentorProfile) -> (text);
  update_project : (text, ProjectInfo) -> (text);
  update_rating_api : (vec Rating) -> ();
  update_suggestion_status_caller : (nat64, text, text) -> ();
  update_team_member : (text, text) -> (text);
  update_venture_capitalist : (VentureCapitalist) -> (text);
  update_venture_capitalist_caller : (VentureCapitalist) -> (text);
  upvote_project : (text) -> (text);
  vc_awaiting_approval : () -> (vec VentureCapitalistInternal) query;
  vc_declined : () -> (vec VentureCapitalistInternal) query;
  vc_profile_edit_awaiting_approval : () -> (vec VentureCapitalist) query;
  verify_project_under_your_hub : (text) -> (text);
  view_notifications_candid : (principal) -> (vec Notification_1) query;
}
